CC := gcc
CFLAGS := -Wall

LIB_DIR := lib
SRC_DIR := src
TEST_DIR := test
BUILD_DIR := build

TEST_EXE_1 := test_stack
TEST_EXE_2 := test_expr
PROG_EXE := main

INCLUDES := $(addprefix -I./,$(wildcard $(LIB_DIR)/*) $(wildcard $(SRC_DIR)/*))

TEST_OBJS_1 := $(notdir $(wildcard $(LIB_DIR)/*/*.c) $(wildcard $(TEST_DIR)/*.c))
TEST_OBJS_1 := $(addprefix $(BUILD_DIR)/,$(TEST_OBJS_1:.c=.o))

TEST_OBJS_2 := $(notdir $(wildcard $(LIB_DIR)/*/*.c) $(wildcard $(TEST_DIR)/*.c) $(wildcard $(SRC_DIR)/*/*.c))
TEST_OBJS_2 := $(addprefix $(BUILD_DIR)/,$(TEST_OBJS_2:.c=.o))

PROG_OBJS := $(notdir $(wildcard $(LIB_DIR)/stack/*.c) $(wildcard $(SRC_DIR)/*.c) $(wildcard $(SRC_DIR)/*/*.c))
PROG_OBJS := $(addprefix $(BUILD_DIR)/,$(PROG_OBJS:.c=.o))

all: .mkbuild $(PROG_EXE) $(TEST_EXE)
	@echo "************ The Targets ************"
	@echo "** clean: to clean"
	@echo "** check_stack: to run the stack test"
	@echo "** check_expr: to run the expression test"
	@echo "** run STR="string_with_parentheses": to run the program"
	@echo "*************************************"

$(PROG_EXE): $(PROG_OBJS)
	$(CC) $^ -lm -o $(BUILD_DIR)/$@

$(TEST_EXE_1): $(TEST_OBJS_1)
	$(CC) $^ -lm -o $(BUILD_DIR)/$@

$(TEST_EXE_2): $(TEST_OBJS_2)
	$(CC) $^ -lm -o $(BUILD_DIR)/$@

LIB_SRC := $(LIB_DIR)/*
$(BUILD_DIR)/%.o:  $(LIB_SRC)/%.c
	$(CC) -MMD $(CFLAGS) -o $@ -c $<

$(BUILD_DIR)/%.o : $(TEST_DIR)/%.c
	$(CC) -MMD $(CFLAGS) -o $@ $(INCLUDES) -c $<

$(BUILD_DIR)/%.o : $(SRC_DIR)/%.c
	$(CC) -MMD $(CFLAGS) -o $@ $(INCLUDES) -c $<
	
#SRS_SRC := $(dir $(wildcard $(SRC_DIR)/*/)) # expression main
#$(BUILD_DIR)/%.o : $(SRS_SRC)%.c
SRS_SRC := $(SRC_DIR)/*
$(BUILD_DIR)/%.o : $(SRS_SRC)/%.c
	$(CC) -MMD $(CFLAGS) -o $@ $(INCLUDES) -c $<

run: .mkbuild $(PROG_EXE)
	@echo ""
	@echo "**************************************"
	@echo "********* Run The Program ************"
	@echo "**************************************"
	@echo ""
	@./$(BUILD_DIR)/$(PROG_EXE) $(STR)

check_stack: .mkbuild $(TEST_DIR)
	@echo ""
	@echo "**************************************"
	@echo "******* Run The Stack Test ***********"
	@echo "**************************************"
	@echo ""
	@./$(BUILD_DIR)/$(TEST_EXE_1)

check_expr: .mkbuild $(TEST_DIR)
	@echo ""
	@echo "**************************************"
	@echo "**** Run The Expression Test *********"
	@echo "**************************************"
	@echo ""
	@./$(BUILD_DIR)/$(TEST_EXE_2)

# Include automatically generated dependencies
-include $(OBJECTS:.o=.d)

.PHONY: clean .mkbuild check all

clean:
	@rm -rf $(BUILD_DIR)

.mkbuild:
	@mkdir -p $(BUILD_DIR)
